package alibabacloud

import (
	v1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// MachineProviderSpec is the type that will be embedded in a Machine.Spec.ProviderSpec field
// for an Alibaba Cloud virtual machine.
type MachineProviderSpec struct {
	// MachineProviderSpec: TODO AlibabaCLoud: Future support "cluster-api-provider-alibabacloud"
	metav1.TypeMeta    `json:",inline"`
	metav1.ObjectMeta  `json:"metadata,omitempty"`
	RegionID           string              `json:"RegionID,omitempty"`
	KeyPairName        string              `json:"KeyPairName,omitempty"`
	ResourceGroupID    string              `json:"ResourceGroupId,omitempty"`
	HostName           string              `json:"HostName,omitempty"`
	Password           string              `json:"Password,omitempty"`
	Tag                []*InstanceTag      `json:"Tag,omitempty"`
	VSwitchID          string              `json:"VSwitchId"`
	PrivateIPAddress   string              `json:"PrivateIpAddress,omitempty"`
	InstanceName       string              `json:"InstanceName,omitempty"`
	ZoneID             string              `json:"ZoneId"`
	ImageID            string              `json:"ImageId"`
	SecurityGroupID    string              `json:"SecurityGroupId"`
	SystemDiskCategory string              `json:"SystemDiskCategory"`
	UserData           string              `json:"UserData,omitempty"`
	InstanceType       string              `json:"InstanceType,omitempty"`
	RAMRoleName        string              `json:"RAMRoleName,omitempty"`
	DataDisk           []*InstanceDataDisk `json:"DataDisk,omitempty"`
	SystemDiskSize     string              `json:"SystemDiskSize,omitempty"`

	UserDataSecret *v1.LocalObjectReference `json:"userDataSecret,omitempty"`

	CredentialsSecret *v1.LocalObjectReference `json:"credentialsSecret,omitempty"`
}

// InstanceTag is the set of tags to add to apply to an instance
type InstanceTag struct {
	Value string `json:"Value,omitempty"`
	Key   string `json:"Key,omitempty"`
}

// InstanceDataDisk describes a data disk.
type InstanceDataDisk struct {
	DiskName           string `json:"DiskName,omitempty"`
	SnapshotID         string `json:"SnapshotId,omitempty"`
	Size               string `json:"Size,omitempty"`
	Encrypted          string `json:"Encrypted,omitempty"`
	PerformanceLevel   string `json:"PerformanceLevel,omitempty"`
	EncryptAlgorithm   string `json:"EncryptAlgorithm,omitempty"`
	Description        string `json:"Description,omitempty"`
	Category           string `json:"Category,omitempty"`
	KMSKeyID           string `json:"KMSKeyId,omitempty"`
	Device             string `json:"Device,omitempty"`
	DeleteWithInstance string `json:"DeleteWithInstance,omitempty"`
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineProviderSpec) DeepCopyInto(out *MachineProviderSpec) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)

	if in.CredentialsSecret != nil {
		in, out := &in.CredentialsSecret, &out.CredentialsSecret
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineProviderSpec.
func (in *MachineProviderSpec) DeepCopy() *MachineProviderSpec {
	if in == nil {
		return nil
	}
	out := new(MachineProviderSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MachineProviderSpec) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}
